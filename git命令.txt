git log命令显示从最近到最远的提交日志
git log --pretty=oneline 将commit信息压缩成一行
git reflog用来记录你的每一次命令：
git reset --hard HEAD 回退到上一个版本
git reset --hard commit id 回退到指定版本

git checkout -- file 可以丢弃工作区的修改,暂存区也可以
git reset HEAD <file> 可以把暂存区的修改撤销掉（unstage）


git checkout -b dev== git branch dev
                                    git checkout dev

git branch命令会列出所有分支，当前分支前面会标一个*号。
git checkout 命令会切换到指定分支


git merge命令用于合并指定分支到当前分支。

git branch -d 删除指定分支

用git log --graph命令可以看到分支合并图。
git log --graph --pretty=oneline --abbrev-commit  简化查看


通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。
如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。
git merge --no-ff -m "merge with no-ff" dev
这个命令可以看到 -m "merge with no-ff" 这句话，和commit提交时一样需要备注信息。普通merge是将master指针直接
指向dev分支最新的提交。但这个命令会生成一个新提交，这样可以保存到dev分支的信息，
